[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "UserListSerializer",
        "importPath": "users.serializers",
        "description": "users.serializers",
        "isExtraImport": true,
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "users.serializers",
        "description": "users.serializers",
        "isExtraImport": true,
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "certificate",
        "importPath": "utils.generate",
        "description": "utils.generate",
        "isExtraImport": true,
        "detail": "utils.generate",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "users.permissions",
        "description": "users.permissions",
        "isExtraImport": true,
        "detail": "users.permissions",
        "documentation": {}
    },
    {
        "label": "CustomPermission",
        "importPath": "users.permissions",
        "description": "users.permissions",
        "isExtraImport": true,
        "detail": "users.permissions",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "SAFE_METHODS",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TruncDate",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "CountVectorizer",
        "importPath": "sklearn.feature_extraction.text",
        "description": "sklearn.feature_extraction.text",
        "isExtraImport": true,
        "detail": "sklearn.feature_extraction.text",
        "documentation": {}
    },
    {
        "label": "PorterStemmer",
        "importPath": "nltk.stem.porter",
        "description": "nltk.stem.porter",
        "isExtraImport": true,
        "detail": "nltk.stem.porter",
        "documentation": {}
    },
    {
        "label": "cosine_similarity",
        "importPath": "sklearn.metrics.pairwise",
        "description": "sklearn.metrics.pairwise",
        "isExtraImport": true,
        "detail": "sklearn.metrics.pairwise",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageDraw",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageFont",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "stringify",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0001_initial",
        "description": "backend.api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Category\",\n            fields=[\n                (",
        "detail": "backend.api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0002_alter_course_category_alter_course_description_and_more",
        "description": "backend.api.migrations.0002_alter_course_category_alter_course_description_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"course\",\n            name=\"category\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "backend.api.migrations.0002_alter_course_category_alter_course_description_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0003_course_is_published_alter_course_price_and_more",
        "description": "backend.api.migrations.0003_course_is_published_alter_course_price_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0002_alter_course_category_alter_course_description_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"course\",\n            name=\"is_published\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "backend.api.migrations.0003_course_is_published_alter_course_price_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0004_section_module",
        "description": "backend.api.migrations.0004_section_module",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0003_course_is_published_alter_course_price_and_more\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Section\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "backend.api.migrations.0004_section_module",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0005_alter_module_video",
        "description": "backend.api.migrations.0005_alter_module_video",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0004_section_module\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"module\",\n            name=\"video\",\n            field=models.FileField(blank=True, null=True, upload_to=\"videos/\"),\n        ),",
        "detail": "backend.api.migrations.0005_alter_module_video",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0006_alter_module_video",
        "description": "backend.api.migrations.0006_alter_module_video",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0005_alter_module_video\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"module\",\n            name=\"video\",\n            field=models.FileField(default=\"\", upload_to=\"videos/\"),\n            preserve_default=False,",
        "detail": "backend.api.migrations.0006_alter_module_video",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0007_module_is_preview",
        "description": "backend.api.migrations.0007_module_is_preview",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0006_alter_module_video\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"module\",\n            name=\"is_preview\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "backend.api.migrations.0007_module_is_preview",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0008_cart",
        "description": "backend.api.migrations.0008_cart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0007_module_is_preview\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Cart\",\n            fields=[\n                (",
        "detail": "backend.api.migrations.0008_cart",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0009_enrollment_payment",
        "description": "backend.api.migrations.0009_enrollment_payment",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0008_cart\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Enrollment\",\n            fields=[\n                (",
        "detail": "backend.api.migrations.0009_enrollment_payment",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0010_payment_pidx",
        "description": "backend.api.migrations.0010_payment_pidx",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0009_enrollment_payment\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"payment\",\n            name=\"pidx\",\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "backend.api.migrations.0010_payment_pidx",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0011_section_is_free_section_video_delete_module",
        "description": "backend.api.migrations.0011_section_is_free_section_video_delete_module",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0010_payment_pidx\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"section\",\n            name=\"is_free\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "backend.api.migrations.0011_section_is_free_section_video_delete_module",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0012_discussion_reply_review",
        "description": "backend.api.migrations.0012_discussion_reply_review",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0011_section_is_free_section_video_delete_module\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Discussion\",\n            fields=[\n                (",
        "detail": "backend.api.migrations.0012_discussion_reply_review",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0013_alter_discussion_unique_together",
        "description": "backend.api.migrations.0013_alter_discussion_unique_together",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0012_discussion_reply_review\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name=\"discussion\",\n            unique_together={(\"user\", \"section\", \"message\")},\n        ),",
        "detail": "backend.api.migrations.0013_alter_discussion_unique_together",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0014_alter_reply_options_progress",
        "description": "backend.api.migrations.0014_alter_reply_options_progress",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0013_alter_discussion_unique_together\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"reply\",\n            options={\"verbose_name_plural\": \"Replies\"},\n        ),",
        "detail": "backend.api.migrations.0014_alter_reply_options_progress",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0015_attachment",
        "description": "backend.api.migrations.0015_attachment",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0014_alter_reply_options_progress\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Attachment\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "backend.api.migrations.0015_attachment",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0016_attachment_created_at_attachment_updated_at",
        "description": "backend.api.migrations.0016_attachment_created_at_attachment_updated_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0015_attachment\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"attachment\",\n            name=\"created_at\",\n            field=models.DateTimeField(\n                auto_now_add=True, default=django.utils.timezone.now",
        "detail": "backend.api.migrations.0016_attachment_created_at_attachment_updated_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0017_alter_course_title",
        "description": "backend.api.migrations.0017_alter_course_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0016_attachment_created_at_attachment_updated_at\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"course\",\n            name=\"title\",\n            field=models.CharField(max_length=150, unique=True),\n        ),",
        "detail": "backend.api.migrations.0017_alter_course_title",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0018_alter_course_unique_together",
        "description": "backend.api.migrations.0018_alter_course_unique_together",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0017_alter_course_title\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name=\"course\",\n            unique_together={(\"title\", \"instructor\")},\n        ),",
        "detail": "backend.api.migrations.0018_alter_course_unique_together",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0019_alter_course_thumbnail",
        "description": "backend.api.migrations.0019_alter_course_thumbnail",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0018_alter_course_unique_together\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"course\",\n            name=\"thumbnail\",\n            field=models.ImageField(\n                blank=True,",
        "detail": "backend.api.migrations.0019_alter_course_thumbnail",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0020_certificate",
        "description": "backend.api.migrations.0020_certificate",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0019_alter_course_thumbnail\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Certificate\",\n            fields=[\n                (",
        "detail": "backend.api.migrations.0020_certificate",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.api.migrations.0021_alter_certificate_file",
        "description": "backend.api.migrations.0021_alter_certificate_file",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"api\", \"0020_certificate\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"certificate\",\n            name=\"file\",\n            field=models.FileField(blank=True, null=True, upload_to=\"certificates/\"),\n        ),",
        "detail": "backend.api.migrations.0021_alter_certificate_file",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "backend.api.apps",
        "description": "backend.api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"api\"",
        "detail": "backend.api.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\n    class Meta:\n        db_table = \"category\"\n        verbose_name_plural = \"Categories\"\nclass Course(models.Model):\n    title = models.CharField(max_length=150, unique=True)\n    slug = models.SlugField(max_length=200, unique=True, null=True, blank=True)",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Course(models.Model):\n    title = models.CharField(max_length=150, unique=True)\n    slug = models.SlugField(max_length=200, unique=True, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    category = models.ForeignKey(\n        Category,\n        on_delete=models.CASCADE,\n        related_name=\"courses\",\n        null=True,\n        blank=True,",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Section",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Section(models.Model):\n    title = models.CharField(max_length=150)\n    course = models.ForeignKey(\n        Course, on_delete=models.CASCADE, related_name=\"sections\"\n    )\n    order = models.PositiveIntegerField()\n    is_free = models.BooleanField(default=False)\n    video = models.FileField(upload_to=\"videos/\", null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Cart(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"cart\")\n    course = models.ForeignKey(Course, on_delete=models.CASCADE, related_name=\"carts\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user.full_name} :: {self.course.title}\"\n    def can_change(self, user):\n        return user == self.user or user.is_superuser\n    class Meta:",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Enrollment",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Enrollment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"enrollments\")\n    course = models.ForeignKey(\n        Course, on_delete=models.CASCADE, related_name=\"enrollments\"\n    )\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user.full_name} :: {self.course.title}\"\n    def can_change(self, user):",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Payment",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Payment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"payments\")\n    course = models.ForeignKey(\n        Course, on_delete=models.CASCADE, related_name=\"payments\"\n    )\n    pidx = models.CharField(max_length=100, null=True, blank=True)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Review(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"reviews\")\n    course = models.ForeignKey(Course, on_delete=models.CASCADE, related_name=\"reviews\")\n    rating = models.PositiveIntegerField()\n    review = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user.full_name} :: {self.course.title}\"\n    def can_change(self, user):",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Discussion",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Discussion(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"discussions\")\n    section = models.ForeignKey(\n        Section, on_delete=models.CASCADE, related_name=\"discussions\"\n    )\n    message = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user.full_name} :: {self.section.title}\"",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Reply",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Reply(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"replies\")\n    discussion = models.ForeignKey(\n        Discussion, on_delete=models.CASCADE, related_name=\"replies\"\n    )\n    message = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user.full_name} :: {self.discussion.section.title}\"",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Progress",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Progress(models.Model):\n    section = models.ForeignKey(\n        Section, on_delete=models.CASCADE, related_name=\"progresses\"\n    )\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"progresses\")\n    completed = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def can_change(self, user):\n        return user == self.user",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Attachment",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Attachment(models.Model):\n    section = models.ForeignKey(\n        Section, on_delete=models.CASCADE, related_name=\"attachments\"\n    )\n    name = models.CharField(max_length=100)\n    file = models.FileField(upload_to=\"attachments/\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.section.title} :: {self.file}\"",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "Certificate",
        "kind": 6,
        "importPath": "backend.api.models",
        "description": "backend.api.models",
        "peekOfCode": "class Certificate(models.Model):\n    user = models.ForeignKey(\n        User, on_delete=models.CASCADE, related_name=\"certificates\"\n    )\n    course = models.ForeignKey(\n        Course, on_delete=models.CASCADE, related_name=\"certificates\"\n    )\n    file = models.FileField(upload_to=\"certificates/\", null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "backend.api.models",
        "documentation": {}
    },
    {
        "label": "CategoryListSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class CategoryListSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = \"__all__\"\nclass CourseSerializer(serializers.ModelSerializer):\n    instructor = UserListSerializer(read_only=True)\n    category = CategoryListSerializer(read_only=True)\n    instructor_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.filter(role=\"instructor\"),\n        source=\"instructor\",",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class CourseSerializer(serializers.ModelSerializer):\n    instructor = UserListSerializer(read_only=True)\n    category = CategoryListSerializer(read_only=True)\n    instructor_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.filter(role=\"instructor\"),\n        source=\"instructor\",\n        write_only=True,\n    )\n    category_id = serializers.PrimaryKeyRelatedField(\n        queryset=Category.objects.all(),",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "CourseListSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class CourseListSerializer(serializers.ModelSerializer):\n    instructor = UserListSerializer(read_only=True)\n    category = CategoryListSerializer(read_only=True)\n    class Meta:\n        model = Course\n        fields = [\n            \"id\",\n            \"title\",\n            \"slug\",\n            \"category\",",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    courses = CourseSerializer(many=True, read_only=True)\n    class Meta:\n        model = Category\n        fields = [\"id\", \"name\", \"courses\"]\nclass SectionSerializer(serializers.ModelSerializer):\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    discussions = serializers.SerializerMethodField(read_only=True)",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "SectionSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class SectionSerializer(serializers.ModelSerializer):\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    discussions = serializers.SerializerMethodField(read_only=True)\n    attachments = serializers.SerializerMethodField(read_only=True)\n    class Meta:\n        model = Section\n        fields = [\n            \"id\",",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    course = CourseListSerializer(read_only=True)\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    class Meta:\n        model = Cart",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "EnrollmentSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class EnrollmentSerializer(serializers.ModelSerializer):\n    course = CourseListSerializer(read_only=True)\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    class Meta:\n        model = Enrollment",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "PaymentSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class PaymentSerializer(serializers.ModelSerializer):\n    course = CourseListSerializer(read_only=True)\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    class Meta:\n        model = Payment",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    user = UserListSerializer(read_only=True)\n    class Meta:\n        model = Review",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "DiscussionSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class DiscussionSerializer(serializers.ModelSerializer):\n    user = UserListSerializer(read_only=True)\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    section_id = serializers.PrimaryKeyRelatedField(\n        queryset=Section.objects.all(), source=\"section\", write_only=True\n    )\n    replies = serializers.SerializerMethodField(read_only=True)\n    class Meta:",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "ReplySerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class ReplySerializer(serializers.ModelSerializer):\n    user = UserListSerializer(read_only=True)\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    discussion_id = serializers.PrimaryKeyRelatedField(\n        queryset=Discussion.objects.all(), source=\"discussion\", write_only=True\n    )\n    class Meta:\n        model = Reply",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "ProgressSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class ProgressSerializer(serializers.ModelSerializer):\n    section_id = serializers.PrimaryKeyRelatedField(\n        queryset=Section.objects.all(), source=\"section\", write_only=True\n    )\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    class Meta:\n        model = Progress\n        fields = [\"id\", \"section_id\", \"user_id\", \"completed\", \"created_at\"]",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "AttachmentSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class AttachmentSerializer(serializers.ModelSerializer):\n    section_id = serializers.PrimaryKeyRelatedField(\n        queryset=Section.objects.all(), source=\"section\", write_only=True\n    )\n    class Meta:\n        model = Attachment\n        fields = [\"id\", \"section_id\", \"name\", \"file\", \"created_at\"]\nclass CertificateSerializer(serializers.ModelSerializer):\n    course = CourseListSerializer(read_only=True)\n    user = UserListSerializer(read_only=True)",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "CertificateSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class CertificateSerializer(serializers.ModelSerializer):\n    course = CourseListSerializer(read_only=True)\n    user = UserListSerializer(read_only=True)\n    course_id = serializers.PrimaryKeyRelatedField(\n        queryset=Course.objects.all(), source=\"course\", write_only=True\n    )\n    user_id = serializers.PrimaryKeyRelatedField(\n        queryset=User.objects.all(), source=\"user\", write_only=True\n    )\n    def save(self, **kwargs):",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.api.urls",
        "description": "backend.api.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r\"categories\", CategoryViewSet, basename=\"categories\")\nrouter.register(r\"courses\", CourseViewSet, basename=\"courses\")\nrouter.register(r\"sections\", SectionViewSet, basename=\"sections\")\nrouter.register(r\"carts\", CartViewSet, basename=\"carts\")\nrouter.register(r\"payments\", PaymentViewSet, basename=\"payments\")\nrouter.register(r\"enrollments\", EnrollmentViewSet, basename=\"enrollments\")\nrouter.register(r\"reviews\", ReviewViewSet, basename=\"reviews\")\nrouter.register(r\"discussions\", DiscussionViewSet, basename=\"discussions\")\nrouter.register(r\"replies\", ReplyViewSet, basename=\"replies\")",
        "detail": "backend.api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.api.urls",
        "description": "backend.api.urls",
        "peekOfCode": "urlpatterns = []\nurlpatterns += router.urls",
        "detail": "backend.api.urls",
        "documentation": {}
    },
    {
        "label": "CategoryViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class CategoryViewSet(ModelViewSet):\n    queryset = Category.objects.all()\n    serializer_class = CategorySerializer\n    def get_serializer(self, *args, **kwargs):\n        if self.action == \"list\":\n            return CategoryListSerializer(*args, **kwargs)\n        return super().get_serializer(*args, **kwargs)\nclass CourseViewSet(ModelViewSet):\n    queryset = Course.objects.select_related(\"instructor\", \"category\").filter()\n    serializer_class = CourseSerializer",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class CourseViewSet(ModelViewSet):\n    queryset = Course.objects.select_related(\"instructor\", \"category\").filter()\n    serializer_class = CourseSerializer\n    filter_backends = [filters.SearchFilter]\n    search_fields = [\"title\"]\n    permission_classes = [CustomPermission]\n    lookup_field = \"slug\"\n    def create(self, request, *args, **kwargs):\n        try:\n            if not request.user.role == \"instructor\":",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "SectionViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class SectionViewSet(ModelViewSet):\n    queryset = Section.objects.all().select_related(\"course\")\n    serializer_class = SectionSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()\n    def destroy(self, request, *args, **kwargs):\n        section = self.get_object()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class CartViewSet(ModelViewSet):\n    queryset = Cart.objects.all().select_related(\"course\")\n    serializer_class = CartSerializer\n    permission_classes = [IsAuthenticated]\n    def get_queryset(self):\n        return Cart.objects.filter(user=self.request.user)\n    def create(self, request, *args, **kwargs):\n        course_id = request.data.get(\"course_id\")\n        if not course_id:\n            return Response(",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "PaymentViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class PaymentViewSet(ModelViewSet):\n    queryset = Payment.objects.all()\n    serializer_class = PaymentSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "EnrollmentViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class EnrollmentViewSet(ModelViewSet):\n    queryset = Enrollment.objects.all().select_related(\"course\")\n    serializer_class = EnrollmentSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class ReviewViewSet(ModelViewSet):\n    queryset = Review.objects.all().select_related(\"course\", \"user\")\n    serializer_class = ReviewSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "DiscussionViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class DiscussionViewSet(ModelViewSet):\n    queryset = Discussion.objects.all().select_related(\"user\", \"section\")\n    serializer_class = DiscussionSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "ReplyViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class ReplyViewSet(ModelViewSet):\n    queryset = Reply.objects.all().select_related(\"user\", \"discussion\")\n    serializer_class = ReplySerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "ProgressViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class ProgressViewSet(ModelViewSet):\n    queryset = Progress.objects.all().select_related(\"section\", \"user\")\n    serializer_class = ProgressSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "AttachmentViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class AttachmentViewSet(ModelViewSet):\n    queryset = Attachment.objects.all()\n    serializer_class = AttachmentSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "CertificateViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class CertificateViewSet(ModelViewSet):\n    queryset = Certificate.objects.all().select_related(\"user\", \"course\")\n    serializer_class = CertificateSerializer\n    permission_classes = [CustomPermission]\n    def get_permissions(self):\n        if self.action in [\"list\", \"retrieve\"]:\n            self.permission_classes = [IsAdminUser]\n        elif self.action == \"create\":\n            self.permission_classes = [IsAuthenticated]\n        return super().get_permissions()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "RecommendedCourseViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class RecommendedCourseViewSet(ModelViewSet):\n    queryset = Course.objects.select_related(\"instructor\", \"category\").filter(\n        is_published=True\n    )\n    serializer_class = CourseListSerializer\n    def get_queryset(self):\n        current_slug = self.request.query_params.get(\"course\", None)\n        if not current_slug:\n            return Course.objects.none()\n        courses = Course.objects.filter(is_published=True).values_list(",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "AdminPanelViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class AdminPanelViewSet(ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = CourseListSerializer\n    permission_classes = [IsAdminUser]\n    @action(detail=False, methods=[\"GET\"])\n    def get_stats(self, request):\n        total_users = User.objects.exclude(role=\"admin\").count()\n        total_instructors = User.objects.filter(role=\"instructor\").count()\n        total_students = User.objects.filter(role=\"student\").count()\n        total_courses = Course.objects.count()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "stem",
        "kind": 2,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "def stem(text):\n    y = []\n    for i in text.split():\n        y.append(ps.stem(i))\n    return \" \".join(y)\nclass CategoryViewSet(ModelViewSet):\n    queryset = Category.objects.all()\n    serializer_class = CategorySerializer\n    def get_serializer(self, *args, **kwargs):\n        if self.action == \"list\":",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "ps",
        "kind": 5,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "ps = PorterStemmer()\ndef stem(text):\n    y = []\n    for i in text.split():\n        y.append(ps.stem(i))\n    return \" \".join(y)\nclass CategoryViewSet(ModelViewSet):\n    queryset = Category.objects.all()\n    serializer_class = CategorySerializer\n    def get_serializer(self, *args, **kwargs):",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.core.asgi",
        "description": "backend.core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nload_dotenv()\nSECRET_KEY = os.getenv(\"SECRET_KEY\")\nAPI_VERSION = os.getenv(\"API_VERSION\")\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"users\",\n    \"api\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "SECRET_KEY = os.getenv(\"SECRET_KEY\")\nAPI_VERSION = os.getenv(\"API_VERSION\")\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"users\",\n    \"api\",\n    \"rest_framework\",\n    \"corsheaders\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "API_VERSION",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "API_VERSION = os.getenv(\"API_VERSION\")\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"users\",\n    \"api\",\n    \"rest_framework\",\n    \"corsheaders\",\n    \"drf_spectacular\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"users\",\n    \"api\",\n    \"rest_framework\",\n    \"corsheaders\",\n    \"drf_spectacular\",\n    \"django.contrib.admin\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"jazzmin\",\n    \"users\",\n    \"api\",\n    \"rest_framework\",\n    \"corsheaders\",\n    \"drf_spectacular\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"jazzmin\",\n    \"users\",\n    \"api\",\n    \"rest_framework\",\n    \"corsheaders\",\n    \"drf_spectacular\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_SCHEMA_CLASS\": \"drf_spectacular.openapi.AutoSchema\",\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ),\n}\nMIDDLEWARE = [\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=7),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"VERIFYING_KEY\": \"\",\n    \"AUDIENCE\": None,",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "ROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    \"TITLE\": \"My API\",\n    \"DESCRIPTION\": \"This is my API description\",\n    \"VERSION\": \"1.0.0\",\n    \"SERVE_INCLUDE_SCHEMA\": False,\n}\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:3000\",\n]",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:3000\",\n]\nWSGI_APPLICATION = \"core.wsgi.application\"\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"e_learning_django\",\n        \"USER\": \"postgres\",",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"core.wsgi.application\"\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"e_learning_django\",\n        \"USER\": \"postgres\",\n        \"PASSWORD\": \"gopal\",\n        \"HOST\": \"localhost\",\n        \"PORT\": \"5432\",\n    }",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"e_learning_django\",\n        \"USER\": \"postgres\",\n        \"PASSWORD\": \"gopal\",\n        \"HOST\": \"localhost\",\n        \"PORT\": \"5432\",\n    }\n}",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "USE_TZ = True\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"media\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / \"staticfiles\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"users.User\"",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "v",
        "kind": 5,
        "importPath": "backend.core.urls",
        "description": "backend.core.urls",
        "peekOfCode": "v = settings.API_VERSION\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(f\"api/{v}/user/\", include(\"users.urls\")),\n    path(f\"api/{v}/\", include(\"api.urls\")),\n    path(\"\", SpectacularSwaggerView.as_view(url_name=\"schema\"), name=\"swagger-ui\"),\n    path(\"schema/\", SpectacularAPIView.as_view(), name=\"schema\"),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "backend.core.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.core.urls",
        "description": "backend.core.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(f\"api/{v}/user/\", include(\"users.urls\")),\n    path(f\"api/{v}/\", include(\"api.urls\")),\n    path(\"\", SpectacularSwaggerView.as_view(url_name=\"schema\"), name=\"swagger-ui\"),\n    path(\"schema/\", SpectacularAPIView.as_view(), name=\"schema\"),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "backend.core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.core.wsgi",
        "description": "backend.core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.users.migrations.0001_initial",
        "description": "backend.users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (",
        "detail": "backend.users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.users.migrations.0002_alter_user_options_remove_user_first_name_and_more",
        "description": "backend.users.migrations.0002_alter_user_options_remove_user_first_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"users\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"user\",\n            options={\"ordering\": [\"-created_at\"], \"verbose_name_plural\": \"Users\"},\n        ),\n        migrations.RemoveField(",
        "detail": "backend.users.migrations.0002_alter_user_options_remove_user_first_name_and_more",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "backend.users.apps",
        "description": "backend.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"users\"",
        "detail": "backend.users.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "backend.users.models",
        "description": "backend.users.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, email, password=None, **kwargs):\n        if not email:\n            raise ValueError(\"Users must have an email address\")\n        user = self.model(\n            email=self.normalize_email(email),\n            **kwargs,\n        )\n        user.set_password(password)\n        user.save(using=self._db)",
        "detail": "backend.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend.users.models",
        "description": "backend.users.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    ROLE_CHOICES = (\n        (\"admin\", \"Admin\"),\n        (\"instructor\", \"Instructor\"),\n        (\"student\", \"Student\"),\n    )\n    email = models.EmailField(\n        verbose_name=\"email address\",\n        max_length=255,\n        unique=True,",
        "detail": "backend.users.models",
        "documentation": {}
    },
    {
        "label": "CustomPermission",
        "kind": 6,
        "importPath": "backend.users.permissions",
        "description": "backend.users.permissions",
        "peekOfCode": "class CustomPermission(permissions.BasePermission):\n    def has_object_permission(self, request, view, obj):\n        if request.method in SAFE_METHODS or request.user.is_superuser:\n            return True\n        if hasattr(obj, \"can_change\") and callable(getattr(obj, \"can_change\")):\n            return obj.can_change(request.user)\n        return False\nclass IsAdminOrSelf(permissions.BasePermission):\n    def has_object_permission(self, request, view, obj):\n        return obj == request.user or request.user.is_superuser",
        "detail": "backend.users.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminOrSelf",
        "kind": 6,
        "importPath": "backend.users.permissions",
        "description": "backend.users.permissions",
        "peekOfCode": "class IsAdminOrSelf(permissions.BasePermission):\n    def has_object_permission(self, request, view, obj):\n        return obj == request.user or request.user.is_superuser",
        "detail": "backend.users.permissions",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "kind": 6,
        "importPath": "backend.users.serializers",
        "description": "backend.users.serializers",
        "peekOfCode": "class MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)\n        token[\"role\"] = user.role\n        return token\nclass UserSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(write_only=True)\n    class Meta:\n        model = User",
        "detail": "backend.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend.users.serializers",
        "description": "backend.users.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(write_only=True)\n    class Meta:\n        model = User\n        fields = [\n            \"id\",\n            \"email\",\n            \"password\",\n            \"full_name\",\n            \"role\",",
        "detail": "backend.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserListSerializer",
        "kind": 6,
        "importPath": "backend.users.serializers",
        "description": "backend.users.serializers",
        "peekOfCode": "class UserListSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = [\n            \"id\",\n            \"email\",\n            \"full_name\",\n            \"profile_image\",\n        ]",
        "detail": "backend.users.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.users.urls",
        "description": "backend.users.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(\"\", UserViewSet, basename=\"user\")\nurlpatterns = [\n    path(\"token/\", TokenObtainPairView.as_view(), name=\"token_obtain_pair\"),\n    path(\"token/refresh/\", TokenRefreshView.as_view(), name=\"token_refresh\"),\n]\nurlpatterns += router.urls",
        "detail": "backend.users.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.users.urls",
        "description": "backend.users.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"token/\", TokenObtainPairView.as_view(), name=\"token_obtain_pair\"),\n    path(\"token/refresh/\", TokenRefreshView.as_view(), name=\"token_refresh\"),\n]\nurlpatterns += router.urls",
        "detail": "backend.users.urls",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "kind": 6,
        "importPath": "backend.users.views",
        "description": "backend.users.views",
        "peekOfCode": "class UserViewSet(ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    def get_permissions(self):\n        if self.action == \"create\":\n            self.permission_classes = []\n        elif self.action == \"list\":\n            self.permission_classes = [IsAdminUser]\n        elif self.action in [\"retrieve\", \"update\", \"destroy\"]:\n            self.permission_classes = [CustomPermission]",
        "detail": "backend.users.views",
        "documentation": {}
    },
    {
        "label": "certificate",
        "kind": 2,
        "importPath": "backend.utils.generate",
        "description": "backend.utils.generate",
        "peekOfCode": "def certificate(student_name, instructor_name, course_name):\n    # Get the base directory of the current file\n    base_dir = os.path.dirname(os.path.abspath(__file__))\n    # Define the correct paths for the certificate template and fonts\n    certificate_path = os.path.join(base_dir, \"certificate.png\")\n    font1_path = os.path.join(base_dir, \"fonts\", \"norwester.otf\")\n    font2_path = os.path.join(base_dir, \"fonts\", \"garamond.ttf\")\n    font3_path = os.path.join(base_dir, \"fonts\", \"Signature.otf\")\n    font4_path = os.path.join(base_dir, \"fonts\", \"garamond.ttf\")\n    # Open the certificate template image",
        "detail": "backend.utils.generate",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"core.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "def stringify(value):\n    return _stringify(value, separators=(',', ':'))\nassert stringify([None, None]) == '[[null,null]]'\na = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "a = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['o']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "b = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['one']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['two']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['three']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['a']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['test']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['array']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a2",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "a2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o2",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "str",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "str = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "oo",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "oo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    }
]